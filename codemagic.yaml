workflows:
  ionic-capacitor-android-workflow:
    name: Ionic Android Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - davidKeystore
      groups:
        - google_play_credentials
        - githubPassword
        - githubToken
        - token
        - aws_credentials
        - cvm_path
        - firebase_credentials_admin
      vars:
        PACKAGE_NAME: "io.codemagic.dtrdic8" 
    triggering:
      events:
         # - pull_request #test1teestmain
          - tag
          #- push
      tag_patterns:
        - pattern: "*" 
          include: true
      branch_patterns:
      - pattern: main
        include: true
    scripts:
      # - name: export cvm
      #   script: |
      #     export PATH="$HOME/.cvm:$PATH"
      #     echo "the path is: $PATH "
      - name: Install npm dependencies and update Cordova version
        script: | 
          # npm install
          # npm ci # equivalent of npm install for CI systems.
          #   # Requires package-lock.json or npm-shrinkwrap.json to be present
          cvm install 12.0.0
          cvm use 12.0.0
      - name: Install npm dependencies for Ionic project 
        script: |
          npm install
      - name: Run build
        script: |
          CI=false npm run build
          #npm run build
      - name: Set up local.properties
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Update dependencies and copy web assets to native project
        script: | 
          npx cap sync
      - name: Build Android release 
        script: | 
          LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
          if [ -z $LATEST_GOOGLE_PLAY_BUILD_NUMBER ]; then
            UPDATED_BUILD_NUMBER=$BUILD_NUMBER
          else
            UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
          fi
          cd android
          ./gradlew bundleRelease \
            -PversionCode=$UPDATED_BUILD_NUMBER \
            -PversionName=1.0.$UPDATED_BUILD_NUMBER
    artifacts:
      - android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - david@nevercode.io
        notify:
          success: true
          failure: false
      firebase:
        firebase_service_account: $FIREBASE_SERVICE_ACCOUNT_APP_DISTRIBUTION_ADMIN
        android:
          app_id: 1:701760780130:android:0d47604cb2123e95f09e3b
      # google_play:
      #   credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      #   track: internal
      #   submit_as_draft: true
        # - name: Build finished successfully 
        #   script: touch ~/SUCCESS
        # - name: Push git tags
        #   script: | 
        #     if [  -f ~/SUCCESS ] ; then
        #       echo "is succesfull"
        #       new_version=v1.0.$BUILD_NUMBER
        #       git tag $new_version
        #       git push "https://x-access-token:$GITHUB_TOKEN@github.com/dtrdic/ionicTestApp4.git" --tags
        #     else
        #       echo "is failed"
        #     fi
        # - name: Check distribution status
        #   script: | 
        #     PUBLISHING_STATUS=$(curl -H "Content-Type: application/json" \
        #         -H "x-auth-token: $CODEMAGIC_TOKEN" \
        #         --request GET https://api.codemagic.io/builds/$CM_BUILD_ID | jq '.build.buildActions[] | select (.type == "publishing") | .status')
            
        #     if [ "$PUBLISHING_STATUS" == "success" ] ; then
        #       echo "is succesfull"
        #       echo "PUBLISHING_STATUS: " $PUBLISHING_STATUS
        #     else
        #         echo "is failed"
        #         echo "PUBLISHING_STATUS: " $PUBLISHING_STATUS
        #     fi

  
  ionic-capacitor-ios-workflow:
    name: ionic iOS Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: DavidAPIkey
    environment:
      ios_signing:
        distribution_type: ad_hoc
        bundle_identifier: io.codemagic.dtrdic8
      groups:
        - firebase_credentials
      vars:
        APP_STORE_APPLE_ID: 1555555551
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
    scripts:
      - name: Install npm dependencies for Ionic project
        script: |
          npm install
      - name: Cocoapods installation
        script: |
          cd ios/App && pod install
      - name: Update dependencies and copy web assets to native project
        script: |
          # npx cap copy # <- use this is you don't need to update native dependencies
          npx cap sync # <- update native dependencies and copy web assets to native project
      - name: Capacitor-assets
        script: |
          npx capacitor-assets generate --ios
          npx cap sync
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios/App
          agvtool new-version -all 1.0.$(($PROJECT_BUILD_NUMBER + 1))
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
            --archive-flags="-destination 'generic/platform=iOS'"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      firebase:
          firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
          ios:
            app_id: 1:701760780130:ios:c8f3bbbaf7c9b23cf09e3b
      email:
        recipients:
          - david@nevercode.io
        notify:
          success: true
          failure: false
      # app_store_connect:
      #   auth: integration
      scripts:
        - name: Upload debug symbols to Firebase Crashlytics
          script: | 
            echo "Find build artifacts"
            dsymPath=$(find $CM_BUILD_DIR/build/ios/archive/Runner.xcarchive -name "*.dSYM*")
            #dsymPath=$(find "$(dirname "$CM_BUILD_DIR")/build_outputs" -name "*.dSYM*")
            if [[ -z ${dsymPath} ]]
            then
              echo "No debug symbols were found, skip publishing to Firebase Crashlytics"
            else
              echo "Publishing debug symbols from $dsymPath to Firebase Crashlytics"
              ls -d -- ios/Pods/*
              $CM_BUILD_DIR/ios/Pods/FirebaseCrashlytics/upload-symbols \
                -gsp ios/App/App/GoogleService-Info.plist -p ios $dsymPath 
            fi


  ionic-capacitor-whitelabeling:
    name: ionic iOS Whitelabeling
    max_build_duration: 60
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: DavidAPIkey
    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.dtrdic8
      vars:
        APP_STORE_APPLE_ID: 1555555551
        XCODE_WORKSPACE: "ios/App/App.xcworkspace"
        XCODE_SCHEME: "App"
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - script: keychain initialize
      - script: keychain add-certificates
      - script: xcode-project use-profiles
      - name: Install npm dependencies for Ionic project
        script: |
          npm install
      - name: Build bundle for Ionic project
        script: |
          ionic build
      - name: Change bundle id
        script: sed -i '' -e 's/PRODUCT_BUNDLE_IDENTIFIER \= [^\;]*\;/PRODUCT_BUNDLE_IDENTIFIER = 'io.codemagic.dtrdic8';/' ios/App/App.xcodeproj/project.pbxproj
      # - name: Change iOS app name
      #   script: /usr/libexec/PlistBuddy -c "Set :CFBundleName $APP_NAME" -c "Set :CFBundleDisplayName $APP_NAME" ios/${XCODE_SCHEME}/App/Info.plist
      - name: Generate icon and splash assets for the project
        script: |
          npx @capacitor/assets generate --ios
      - name: Update dependencies and copy web assets to native project
        script: |
          npx cap sync
      - name: Enable capabilities
        script: |
          app-store-connect bundle-ids enable-capabilities \
              $BUNDLE_ID \
              --capability=HealthKit|Push Notifications
      - name: Cocoapods installation
        script: |
          cd ios/App && pod install
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles
      - name: Increment build number
        script: |
          cd $CM_BUILD_DIR/ios/App
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-app-store-build-number "$APP_STORE_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
          agvtool new-marketing-version $BUILD_VERSION
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
          --workspace "$XCODE_WORKSPACE" \
          --scheme "$XCODE_SCHEME" \
          --archive-flags="-destination 'generic/platform=iOS'" \
          --archive-xcargs "CODE_SIGNING_REQUIRED=YES CODE_SIGNING_ALLOWED=NO"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - david@nvercode.io
        notify:
          success: true
          failure: false
      app_store_connect:
        auth: integration