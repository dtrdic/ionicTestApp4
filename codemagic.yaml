workflows:
  ionic-capacitor-android-workflow:
    name: Ionic Capacitor Android Workflow
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - davidKeystore
      groups:
        - google_play_credentials
        - githubPassword
        - githubToken
        - token
        - firebase_credentials
      vars:
        PACKAGE_NAME: "io.codemagic.dtrdic8"
        CM_ENV: "nothing inside"
    triggering:
          events:
              - pull_request
              - push
          branch_patterns:
          - pattern: "main" 
            include: true
            source: false
    scripts:
      - name: Install npm dependencies for Ionic project 
        script: |
          npm install
      - name: Set up local.properties
        script: | 
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
      - name: Update dependencies and copy web assets to native project
        script: | 
          npx cap sync
      - name: Build Android release
        script: | 
          LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME")
          if [ -z $LATEST_GOOGLE_PLAY_BUILD_NUMBER ]; then
            UPDATED_BUILD_NUMBER=$BUILD_NUMBER
          else
            UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
          fi
          cd android
          ./gradlew bundleRelease \
            -PversionCode=$UPDATED_BUILD_NUMBER \
            -PversionName=1.0.$UPDATED_BUILD_NUMBER
    artifacts:
      - android/app/build/outputs/**/*.aab
    publishing:
      email:
        recipients:
          - david@nevercode.io
        notify:
          success: true
          failure: false
      # google_play:
      #   credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
      #   track: internal
      #   submit_as_draft: true
      firebase:
          firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
          ios:
            app_id: 1:701760780130:ios:c8f3bbbaf7c9b23cf09e3b
      scripts:
          - name: Upload debug symbols to Firebase Crashlytics
            script: | 
              echo "Find build artifacts"
              dsymPath=$(find $CM_BUILD_DIR/build/ios/archive/Runner.xcarchive -name "*.dSYM*")
              #dsymPath=$(find "$(dirname "$CM_BUILD_DIR")/build_outputs" -name "*.dSYM*")
              if [[ -z ${dsymPath} ]]
              then
                echo "No debug symbols were found, skip publishing to Firebase Crashlytics"
              else
                echo "Publishing debug symbols from $dsymPath to Firebase Crashlytics"
                ls -d -- ios/Pods/*
                $CM_BUILD_DIR/ios/Pods/FirebaseCrashlytics/upload-symbols \
                  -gsp ios/App/GoogleService-Info.plist -p ios $dsymPath 
              fi
        # - name: Build finished successfully 
        #   script: touch ~/SUCCESS
        # - name: Push git tags
        #   script: | 
        #     if [  -f ~/SUCCESS ] ; then
        #       echo "is succesfull"
        #       new_version=v1.0.$BUILD_NUMBER
        #       git tag $new_version
        #       git push "https://x-access-token:$GITHUB_TOKEN@github.com/dtrdic/ionicTestApp4.git" --tags
        #     else
        #       echo "is failed"
        #     fi
        # - name: Check distribution status
        #   script: | 
        #     PUBLISHING_STATUS=$(curl -H "Content-Type: application/json" \
        #         -H "x-auth-token: $CODEMAGIC_TOKEN" \
        #         --request GET https://api.codemagic.io/builds/$CM_BUILD_ID | jq '.build.buildActions[] | select (.type == "publishing") | .status')
            
        #     if [ "$PUBLISHING_STATUS" == "success" ] ; then
        #       echo "is succesfull"
        #       echo "PUBLISHING_STATUS: " $PUBLISHING_STATUS
        #     else
        #         echo "is failed"
        #         echo "PUBLISHING_STATUS: " $PUBLISHING_STATUS
        #     fi
